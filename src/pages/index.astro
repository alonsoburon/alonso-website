---
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';
import { closedSourceProjects, openSourceProjects } from '../data/projects';

const posts = await getCollection('blog');
const recentPosts = posts.slice(0, 3);

function formatDate(dateString: string) {
  const date = new Date(dateString);
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
}
---

<Layout title="Alonso Burón - Portfolio" description="Lead Data Engineer and Composer">
  <div class="container">
    <!-- CV Content -->
    <div class="cv-grid">
      <!-- Left Column: Skills + Education -->
        <!-- Skills -->
      <section class="skills-section" style="text-align: center;">
        <h2>Technical Skills</h2>
        <div class="skills-grid">
          <div class="skill-category">
            <h3 style="color: rgb(98, 195, 98);">Programming</h3>
            <div class="skill-list">
              <span>PyArrow & SQLAlchemy</span>
              <span>6+ SQL dialects</span>
              <span>CI/CD pipelines</span>
              <span>Debian and Arch-based systems</span>
            </div>
          </div>
          <div class="skill-category">
            <h3 style="color: rgb(98, 195, 98);">Data Engineering</h3>
            <div class="skill-list">
              <span>ETL & ELT pipelines</span>
              <span>BigQuery & Snowflake</span>
              <span>Iceberg & Delta Tables</span>
              <span>Data Quality and Governance</span>
            </div>
          </div>
          <div class="skill-category">
            <h3 style="color: rgb(98, 195, 98);">Cloud & Infrastructure</h3>
            <div class="skill-list">
              <span>GCP Cloud Engineer</span>
              <span>Github Actions & DevOps</span>
              <span>Docker & Custom Deployments</span>
              <span>Windows & Linux Server Admin.</span>
            </div>
          </div> 
          <div class="skill-category">
            <h3 style="color: rgb(98, 195, 98);">Leadership & Management</h3>
            <div class="skill-list">
              <span>Team Leadership</span>
              <span>Mentoring & Training</span>
              <span>Project Management</span>
              <span>Practical Agile</span>
            </div>
          </div>
        </div>
      </section>

      <!-- Education -->
      <section class="education-section">
        <h2>Education</h2>
        <div class="education-list">
          <div class="edu-item">
            <div class="edu-header">
              <h3>Data Science</h3>
              <span class="edu-period">2023 - 2024</span>
            </div>
            <div class="edu-institution">Pontificia Universidad Católica de Chile</div>
            <p>Data Science Diploma with emphasis on Business Analytics and Business Intelligence.</p>
          </div>
          <div class="edu-item">
            <div class="edu-header">
              <h3>BSc. in Data Science</h3>
              <span class="edu-period">2024 - 2028</span>
            </div>
            <div class="edu-institution">IU Internationale Hochschule</div>
            <p>Bachelor of Science in Data Science.</p>
          </div>
        </div>
      </section>
      <!-- Right Column: Projects -->
      <section class="projects-section">
        <h2>Projects</h2>
        
        <!-- Project Tabs -->
        <div class="project-tabs">
          <button class="tab-button active" data-tab="opensource">Open Source</button>
          <button class="tab-button" data-tab="closedsource">Closed Source</button>
        </div>
        
        <!-- Open Source Projects Tab -->
        <div class="tab-content active" id="opensource">
          <div class="projects-list">
            {openSourceProjects.map((project) => (
              <div class="project-item opensource-item">
                <div class="project-header">
                  <h3>
                    {project.githubUrl ? (
                      <a href={project.githubUrl} target="_blank" rel="noopener noreferrer">
                        {project.title}
                      </a>
                    ) : (
                      project.title
                    )}
                  </h3>
                  <span class="project-period">{project.period}</span>
                </div>
                {project.role && <div class="project-role">{project.role}</div>}
                <p>{project.description}</p>
                <div class="project-achievements">
                  {project.achievements.map((achievement) => (
                    <span>{achievement}</span>
                  ))}
                </div>
                {project.tech && (
                  <div class="project-tech">
                    {project.tech.map((tech) => (
                      <span>{tech}</span>
                    ))}
                  </div>
                )}
              </div>
            ))}
          </div>
        </div>
        
        <!-- Closed Source Projects Tab -->
        <div class="tab-content" id="closedsource">
          <div class="projects-list">
            {closedSourceProjects.map((project) => (
              <div class="project-item">
                <div class="project-header">
                  <h3>{project.title}</h3>
                  <span class="project-period">{project.period}</span>
                </div>
                {project.role && <div class="project-role">{project.role}</div>}
                <p>{project.description}</p>
                <div class="project-achievements">
                  {project.achievements.map((achievement) => (
                    <span>{achievement}</span>
                  ))}
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>
    </div>

    <!-- Recent Posts -->
    <section class="recent-posts">
      <h2>Latest Articles</h2>
      <div class="posts-grid">
        {recentPosts.map((post) => (
          <article class="post-card">
            <h3><a href={`/blog/${post.slug}`}>{post.data.title}</a></h3>
            <p class="post-meta">{formatDate(post.data.date)}</p>
            <p>{post.data.description || 'Article about data engineering and analysis.'}</p>
          </article>
        ))}
      </div>
      <div class="text-center">
        <a href="/blog" class="btn btn-outline">View All Articles</a>
      </div>
    </section>
  </div>

  <style>
    /* Buttons */
    .btn {
      display: inline-block;
      padding: 0.5rem 1rem;
      border-radius: 0.5rem;
      text-decoration: none;
      font-weight: 600;
      transition: all 0.3s;
      border: 2px solid transparent;
      font-size: 0.9rem;
    }

    .btn-outline {
      background: transparent;
      color: #58a6ff;
      border-color: #58a6ff;
    }

    .btn-outline:hover {
      background: #58a6ff;
      color: white;
    }

    /* CV Grid Layout */
    .cv-grid {
      display: grid;
      grid-template-columns: 1fr 1fr;
      column-gap: 2rem;
      row-gap: 1.5rem;
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 9rem;
      align-items: start;
    }

    .skills-section {
      grid-column: 1 / 2;
      grid-row: 1 / 2;
    }

    .education-section {
      grid-column: 1 / 2;
      grid-row: 2 / 3;
    }

    .projects-section {
      grid-column: 2 / 3;
      grid-row: 1 / 3;
    }

    /* Sections */
    section {
      margin-bottom: 2rem;
      display: flex;
      flex-direction: column;
    }

    h2 {
      font-size: 1.3rem;
      font-weight: 700;
      text-align: center;
      margin-bottom: 1rem;
      color: #f0f6fc;
    }

    /* Skills Section */
    .skills-grid {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 0.75rem;
    }

    .skill-category {
      background: rgba(30, 41, 59, 0.2);
      border: 1px solid rgba(148, 163, 184, 0.1);
      border-radius: 6px;
      padding: 0.5rem;
    }

    .skill-category h3 {
      color: #f1f5f9;
      font-size: 0.9rem;
      font-weight: 600;
      margin-bottom: 0.25rem;
    }

    .skill-list {
      display: flex;
      flex-direction: column;
      gap: 0.15rem;
    }

    .skill-list span {
      color: #cbd5e1;
      font-size: 0.8rem;
      padding: 0.1rem 0;
    }

    /* Education Section */
    .education-list {
      display: flex;
      flex-direction: column;
      gap: 0.75rem;
    }

    .edu-item {
      background: rgba(30, 41, 59, 0.2);
      border: 1px solid rgba(148, 163, 184, 0.1);
      border-radius: 6px;
      padding: 0.75rem;
    }

    .edu-header {
      display: flex;
      justify-content: space-between;
      align-items: flex-start;
      margin-bottom: 0.25rem;
    }

    .edu-header h3 {
      color: #f1f5f9;
      font-size: 0.95rem;
      font-weight: 600;
      margin: 0;
    }

    .edu-period {
      color: #94a3b8;
      font-size: 0.75rem;
      background: rgba(148, 163, 184, 0.1);
      padding: 0.15rem 0.4rem;
      border-radius: 8px;
    }

    .edu-institution {
      color: #58a6ff;
      font-weight: 500;
      margin-bottom: 0.25rem;
      font-size: 0.8rem;
    }

    .edu-item p {
      color: #cbd5e1;
      line-height: 1.3;
      font-size: 0.8rem;
    }

    /* Project Tabs */
    .project-tabs {
      display: flex;
      gap: 0.5rem;
      margin-bottom: 1rem;
      border-bottom: 1px solid rgba(148, 163, 184, 0.1);
    }

    .tab-button {
      background: transparent;
      border: none;
      color: #94a3b8;
      padding: 0.5rem 1rem;
      cursor: pointer;
      font-size: 0.9rem;
      font-weight: 500;
      border-bottom: 2px solid transparent;
      transition: all 0.3s;
    }

    .tab-button:hover {
      color: #f1f5f9;
    }

    .tab-button.active {
      color: #58a6ff;
      border-bottom-color: #58a6ff;
    }

    .tab-content {
      display: none;
    }

    .tab-content.active {
      display: block;
    }

    /* Projects Section */
    .projects-list {
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }

    .project-item {
      background: rgba(30, 41, 59, 0.2);
      border: 1px solid rgba(148, 163, 184, 0.1);
      border-radius: 6px;
      padding: 1rem;
    }

    .project-header {
      display: flex;
      justify-content: space-between;
      align-items: flex-start;
      margin-bottom: 0.25rem;
    }

    .project-header h3 {
      color: #f1f5f9;
      font-size: 1.2rem;
      font-weight: 600;
      margin: 0;
    }

    .project-period {
      color: #94a3b8;
      font-size: 0.75rem;
      background: rgba(148, 163, 184, 0.1);
      padding: 0.15rem 0.4rem;
      border-radius: 8px;
    }

    .project-role {
      color: #f59e0b;
      font-weight: 500;
      margin-bottom: 0.25rem;
      font-size: 0.8rem;
    }

    .project-item p {
      color: #cbd5e1;
      line-height: 1.3;
      margin-bottom: 0.5rem;
      font-size: 0.8rem;
    }

    .project-achievements {
      display: flex;
      flex-wrap: wrap;
      gap: 0.25rem;
      margin-bottom: 0.5rem;
    }

    .project-achievements span {
      background: rgba(16, 185, 129, 0.1);
      color: #10b981;
      padding: 0.15rem 0.4rem;
      border-radius: 8px;
      font-size: 0.7rem;
      border: 1px solid rgba(16, 185, 129, 0.2);
    }

    .project-tech {
      display: flex;
      flex-wrap: wrap;
      gap: 0.25rem;
    }

    .project-tech span {
      background: rgba(88, 166, 255, 0.1);
      color: #58a6ff;
      padding: 0.15rem 0.4rem;
      border-radius: 8px;
      font-size: 0.7rem;
      border: 1px solid rgba(88, 166, 255, 0.2);
    }

    /* Open Source Project Styling */
    .opensource-item h3 a {
      color: #f1f5f9;
      text-decoration: none;
    }

    .opensource-item h3 a:hover {
      color: #58a6ff;
      text-decoration: underline;
    }


    /* Responsive */
    @media (max-width: 1200px) {
      .cv-grid {
        grid-template-columns: 1fr;
        gap: 1.5rem;
      }

      .skills-section,
      .education-section,
      .projects-section {
        grid-column: auto;
        grid-row: auto;
      }
    }

    @media (max-width: 1024px) {
      .skills-grid {
        grid-template-columns: 1fr;
      }

      .project-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 0.25rem;
      }

      .edu-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 0.25rem;
      }
    }


    /* Recent Posts */
    .posts-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 1.5rem;
      margin-bottom: 2rem;
      max-width: 1200px;
      margin-left: auto;
      margin-right: auto;
    }

    .post-card {
      background: #161b22;
      padding: 1.5rem;
      border-radius: 1rem;
      box-shadow: 0 4px 6px rgba(0,0,0,0.3);
      border: 1px solid #21262d;
      transition: transform 0.3s, box-shadow 0.3s;
    }

    .post-card:hover {
      transform: translateY(-4px);
      box-shadow: 0 8px 25px rgba(0,0,0,0.4);
      border-color: #58a6ff;
    }

    .post-card h3 {
      font-size: 1.25rem;
      font-weight: 600;
      margin-bottom: 0.5rem;
    }

    .post-card h3 a {
      color: #f0f6fc;
      text-decoration: none;
    }

    .post-card h3 a:hover {
      color: #58a6ff;
    }

    .post-meta {
      color: #8b949e;
      font-size: 0.875rem;
      margin-bottom: 1rem;
    }

    .text-center {
      text-align: center;
    }

    /* Responsive */
    @media (max-width: 768px) {
      .hero h1 {
        font-size: 2.5rem;
      }

      .hero-subtitle {
        font-size: 1.25rem;
      }

      .hero-buttons {
        flex-direction: column;
        align-items: center;
      }

      .timeline::before {
        left: 1rem;
      }

      .timeline-item {
        padding-left: 3rem;
      }

      .timeline-marker {
        left: 0.25rem;
      }

      .posts-grid {
        grid-template-columns: 1fr;
      }
    }
  </style>

  <script>
    // Tab functionality
    document.addEventListener('DOMContentLoaded', function() {
      const tabButtons = document.querySelectorAll('.tab-button');
      const tabContents = document.querySelectorAll('.tab-content');

      tabButtons.forEach(button => {
        button.addEventListener('click', function(this: HTMLButtonElement) {
          const targetTab = (this as HTMLElement).getAttribute('data-tab');

          // Remove active class from all buttons and contents
          tabButtons.forEach(btn => btn.classList.remove('active'));
          tabContents.forEach(content => content.classList.remove('active'));

          // Add active class to clicked button and corresponding content
          (this as HTMLElement).classList.add('active');
          document.getElementById(targetTab as string)?.classList.add('active');
        });
      });
    });
  </script>

</Layout>
