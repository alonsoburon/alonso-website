---
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';

const posts = await getCollection('blog');
const recentPosts = posts.slice(0, 3);

function formatDate(dateString: string) {
  const date = new Date(dateString);
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
}
---

<Layout title="Alonso Burón - Portfolio" description="Lead Data Engineer and Composer">
  <div class="container">
    <!-- Hero Section -->
    <section class="hero">
      <div class="hero-content">
        <h1>Hi, I'm Alonso</h1>
        <p class="hero-subtitle">Building LATAM's best data extraction platform</p>
        <p class="hero-description">
          Former music student who accidentally became a data engineer by helping his girlfriend with Stata homework. 
          Now leading Datawalt's first Data Engineering Cell, processing millions of records daily across LATAM. 
          Still figuring it out, but making it work.
        </p>
        <div class="hero-buttons">
          <a href="/blog" class="btn btn-primary">Read My Story</a>
          <a href="/contact" class="btn btn-secondary">Get In Touch</a>
        </div>
      </div>
    </section>


    <!-- Skills Pipeline -->
    <section class="skills-pipeline">
      <h2>Skills Pipeline</h2>
      <div class="pipeline-container">
        <!-- Top Row - Foundation Skills -->
        <div class="pipeline-block" data-skill="python" onclick="showSkillDetails('python')" style="grid-column: 1; grid-row: 1;">
          <h3>Python</h3>
          <p>Data Processing</p>
        </div>
        
        <div class="pipeline-block" data-skill="sql" onclick="showSkillDetails('sql')" style="grid-column: 2; grid-row: 1;">
          <h3>SQL</h3>
          <p>Database Queries</p>
        </div>
        
        <div class="pipeline-block" data-skill="statistics" onclick="showSkillDetails('statistics')" style="grid-column: 3; grid-row: 1;">
          <h3>Statistics</h3>
          <p>Analytical Foundation</p>
        </div>
        
        <div class="pipeline-block" data-skill="databases" onclick="showSkillDetails('databases')" style="grid-column: 4; grid-row: 1;">
          <h3>Databases</h3>
          <p>PostgreSQL • Data Warehousing</p>
        </div>

        <!-- Middle Row - Core Skills -->
        <div class="pipeline-block" data-skill="cloud" onclick="showSkillDetails('cloud')" style="grid-column: 1; grid-row: 2;">
          <h3>Cloud Storage</h3>
          <p>Scalable Infrastructure</p>
        </div>
        
        <div class="pipeline-block main-block" data-skill="data-engineering" onclick="showSkillDetails('data-engineering')" style="grid-column: 2; grid-row: 2;">
          <h3>Data Engineering</h3>
          <p>ETL • Pipelines • Automation</p>
        </div>
        
        <div class="pipeline-block main-block" data-skill="software-design" onclick="showSkillDetails('software-design')" style="grid-column: 3; grid-row: 2;">
          <h3>Software Design</h3>
          <p>Architecture • Scalability • Systems</p>
        </div>
        
        <div class="pipeline-block" data-skill="analytics" onclick="showSkillDetails('analytics')" style="grid-column: 4; grid-row: 2;">
          <h3>Analytics</h3>
          <p>Business Intelligence</p>
        </div>

        <!-- Bottom Row - Application Skills -->
        <div class="pipeline-block" data-skill="visualization" onclick="showSkillDetails('visualization')" style="grid-column: 1; grid-row: 3;">
          <h3>Visualization</h3>
          <p>Power BI • Dashboards</p>
        </div>
        
        <div class="pipeline-block" data-skill="leadership" onclick="showSkillDetails('leadership')" style="grid-column: 2; grid-row: 3;">
          <h3>Team Leadership</h3>
          <p>Management • Mentoring</p>
        </div>
        
        <div class="pipeline-block" data-skill="communication" onclick="showSkillDetails('communication')" style="grid-column: 3; grid-row: 3;">
          <h3>Communication</h3>
          <p>Stakeholder Relations</p>
        </div>
        
        <div class="pipeline-block final-block" data-skill="alonso" onclick="showSkillDetails('alonso')" style="grid-column: 4; grid-row: 3;">
          <h3>Data Engineering Lead</h3>
          <p>LATAM • Enterprise Solutions</p>
        </div>

        <!-- Connection Lines -->
        <svg class="pipeline-connections" viewBox="0 0 1200 600">
          <!-- Top row to Data Engineering -->
          <path d="M 200 100 Q 300 100 400 200" stroke="#10b981" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
          <path d="M 400 100 Q 400 150 400 200" stroke="#10b981" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
          <path d="M 600 100 Q 500 100 400 200" stroke="#10b981" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
          <path d="M 800 100 Q 700 100 600 200" stroke="#10b981" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
          
          <!-- Top row to Software Design -->
          <path d="M 200 100 Q 500 100 600 200" stroke="#10b981" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
          <path d="M 400 100 Q 500 100 600 200" stroke="#10b981" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
          <path d="M 600 100 Q 600 150 600 200" stroke="#10b981" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
          <path d="M 800 100 Q 700 100 600 200" stroke="#10b981" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
          
          <!-- Cloud to Data Engineering -->
          <path d="M 200 300 Q 300 300 400 200" stroke="#10b981" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
          
          <!-- Analytics to Software Design -->
          <path d="M 800 300 Q 700 300 600 200" stroke="#10b981" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
          
          <!-- Data Engineering to Leadership -->
          <path d="M 400 200 Q 400 250 400 300" stroke="#10b981" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
          
          <!-- Software Design to Communication -->
          <path d="M 600 200 Q 600 250 600 300" stroke="#10b981" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
          
          <!-- All to Final -->
          <path d="M 200 500 Q 400 500 800 500" stroke="#10b981" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
          <path d="M 400 500 Q 500 500 800 500" stroke="#10b981" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
          <path d="M 600 500 Q 700 500 800 500" stroke="#10b981" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
          <path d="M 800 500 Q 800 500 800 500" stroke="#10b981" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
          
          <defs>
            <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
              <polygon points="0 0, 10 3.5, 0 7" fill="#10b981"/>
            </marker>
          </defs>
        </svg>
      </div>
    </section>

    <!-- Recent Posts -->
    <section class="recent-posts">
      <h2>Latest Articles</h2>
      <div class="posts-grid">
        {recentPosts.map((post) => (
          <article class="post-card">
            <h3><a href={`/blog/${post.slug}`}>{post.data.title}</a></h3>
            <p class="post-meta">{formatDate(post.data.date)}</p>
            <p>{post.data.description || 'Article about data engineering and analysis.'}</p>
          </article>
        ))}
      </div>
      <div class="text-center">
        <a href="/blog" class="btn btn-outline">View All Articles</a>
      </div>
    </section>
  </div>

  <style>
    /* Hero Section */
    .hero {
      text-align: center;
      padding: 4rem 0;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      margin: -2rem 0 4rem 0;
      border-radius: 0 0 0 0;
    }

    .hero-content {
      max-width: 800px;
      margin: 0 auto;
      padding: 0 1rem;
    }

    .hero h1 {
      font-size: 3.5rem;
      font-weight: 700;
      margin-bottom: 1rem;
    }

    .hero-subtitle {
      font-size: 1.5rem;
      font-weight: 300;
      margin-bottom: 1rem;
      opacity: 0.9;
    }

    .hero-description {
      font-size: 1.1rem;
      margin-bottom: 2rem;
      opacity: 0.8;
      line-height: 1.7;
    }

    .hero-buttons {
      display: flex;
      gap: 1rem;
      justify-content: center;
      flex-wrap: wrap;
    }

    /* Buttons */
    .btn {
      display: inline-block;
      padding: 0.75rem 1.5rem;
      border-radius: 0.5rem;
      text-decoration: none;
      font-weight: 600;
      transition: all 0.3s;
      border: 2px solid transparent;
    }

    .btn-primary {
      background: white;
      color: #667eea;
    }

    .btn-primary:hover {
      background: #f8f9fa;
      transform: translateY(-2px);
    }

    .btn-secondary {
      background: transparent;
      color: white;
      border-color: white;
    }

    .btn-secondary:hover {
      background: white;
      color: #667eea;
    }

    .btn-outline {
      background: transparent;
      color: #58a6ff;
      border-color: #58a6ff;
    }

    .btn-outline:hover {
      background: #58a6ff;
      color: white;
    }

    /* Sections */
    section {
      margin-bottom: 4rem;
    }

    h2 {
      font-size: 2.5rem;
      font-weight: 700;
      text-align: center;
      margin-bottom: 3rem;
      color: #f0f6fc;
    }

    /* Interactive Personal Journey Section */
    .pipeline-demo {
      padding: 4rem 0;
      background: linear-gradient(135deg, #0f172a 0%, #1e293b 50%, #0f172a 100%);
      color: white;
      position: relative;
      overflow: visible;
    }

    .pipeline-demo::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: radial-gradient(circle at 20% 50%, rgba(88, 166, 255, 0.1) 0%, transparent 50%),
                  radial-gradient(circle at 80% 20%, rgba(16, 185, 129, 0.1) 0%, transparent 50%),
                  radial-gradient(circle at 40% 80%, rgba(139, 92, 246, 0.1) 0%, transparent 50%);
      pointer-events: none;
    }

    .pipeline-demo h2 {
      text-align: center;
      font-size: 2.5rem;
      font-weight: 700;
      color: #f1f5f9;
      margin-bottom: 3rem;
      position: relative;
      z-index: 1;
    }

    .skills-pipeline {
      padding: 4rem 0;
      background: #0f172a;
    }

    .skills-pipeline h2 {
      text-align: center;
      font-size: 2.5rem;
      font-weight: 700;
      color: #f1f5f9;
      margin-bottom: 3rem;
      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
    }

    .pipeline-container {
      max-width: 1400px;
      margin: 0 auto;
      padding: 0 2rem;
      position: relative;
      overflow-x: auto;
    }

    .pipeline-column {
      display: flex;
      flex-direction: column;
      gap: 1rem;
      min-width: 200px;
      margin-right: 2rem;
    }

    .pipeline-block {
      background: transparent;
      border: 2px solid #f1f5f9;
      border-radius: 12px;
      padding: 1.5rem;
      transition: all 0.3s ease;
      cursor: pointer;
      position: relative;
      min-height: 100px;
      display: flex;
      flex-direction: column;
      justify-content: center;
    }

    .pipeline-block:hover {
      border-color: #10b981;
      box-shadow: 0 0 20px rgba(16, 185, 129, 0.3);
      transform: translateY(-2px);
    }

    .pipeline-block.main-block {
      border-color: #10b981;
      background: rgba(16, 185, 129, 0.1);
      min-height: 120px;
    }

    .pipeline-block.final-block {
      border-color: #f59e0b;
      background: rgba(245, 158, 11, 0.1);
      min-height: 120px;
    }

    .pipeline-block h3 {
      font-size: 1.2rem;
      font-weight: 600;
      color: #f1f5f9;
      margin: 0 0 0.5rem 0;
      text-align: center;
    }

    .pipeline-block p {
      font-size: 0.9rem;
      color: #94a3b8;
      margin: 0;
      text-align: center;
      line-height: 1.4;
    }

    .pipeline-connections {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
      z-index: -1;
    }

    .pipeline-connections path {
      stroke-dasharray: 5, 5;
      animation: dash 2s linear infinite;
    }

    @keyframes dash {
      to {
        stroke-dashoffset: -10;
      }
    }

    .pipeline-node {
      background: linear-gradient(145deg, #1e293b 0%, #334155 100%);
      border: 2px solid #475569;
      border-radius: 16px;
      padding: 1.5rem;
      width: 280px;
      transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
      cursor: pointer;
      position: relative;
      overflow: hidden;
      flex-shrink: 0;
      backdrop-filter: blur(10px);
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
      z-index: 1;
    }

    .pipeline-node::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
      transition: left 0.6s ease;
    }

    .pipeline-node:hover::before {
      left: 100%;
    }

    .pipeline-node:hover {
      border-color: #58a6ff;
      box-shadow: 0 12px 40px rgba(88, 166, 255, 0.3), 0 0 0 1px rgba(88, 166, 255, 0.2);
      transform: translateY(-8px) scale(1.02);
    }

    .pipeline-node.active {
      border-color: #10b981;
      box-shadow: 0 12px 40px rgba(16, 185, 129, 0.4), 0 0 0 1px rgba(16, 185, 129, 0.3);
      transform: translateY(-4px) scale(1.01);
    }

    .node-header {
      display: flex;
      align-items: center;
      gap: 0.75rem;
      margin-bottom: 1rem;
    }

    .node-status {
      width: 12px;
      height: 12px;
      border-radius: 50%;
      animation: pulse 2s infinite;
      position: relative;
    }

    .node-status::after {
      content: '';
      position: absolute;
      top: -2px;
      left: -2px;
      right: -2px;
      bottom: -2px;
      border-radius: 50%;
      background: inherit;
      opacity: 0.3;
      animation: ripple 2s infinite;
    }

    .status-success {
      background: #10b981;
      box-shadow: 0 0 15px rgba(16, 185, 129, 0.6);
    }

    .node-icon {
      font-size: 1.8rem;
      filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3));
      transition: transform 0.3s ease;
    }

    .pipeline-node:hover .node-icon {
      transform: scale(1.1) rotate(5deg);
    }

    .node-content h3 {
      font-size: 1.2rem;
      font-weight: 600;
      color: #f1f5f9;
      margin-bottom: 0.5rem;
      text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
    }

    .node-content p {
      color: #94a3b8;
      font-size: 0.9rem;
      margin-bottom: 1rem;
      line-height: 1.4;
    }


    .connection-line {
      position: absolute;
      background: linear-gradient(45deg, transparent 0%, #10b981 20%, #10b981 80%, transparent 100%);
      height: 2px;
      z-index: -1;
      animation: flow 3s ease-in-out infinite;
    }

    .top-left-to-center {
      top: 50%;
      left: 50%;
      width: 200px;
      transform: translate(-50%, -50%) rotate(-45deg);
      transform-origin: center;
    }

    .top-center-to-center {
      top: 50%;
      left: 50%;
      width: 150px;
      transform: translate(-50%, -50%) rotate(-90deg);
      transform-origin: center;
    }

    .top-right-to-center {
      top: 50%;
      left: 50%;
      width: 200px;
      transform: translate(-50%, -50%) rotate(-135deg);
      transform-origin: center;
    }

    .left-top-to-center {
      top: 50%;
      left: 50%;
      width: 200px;
      transform: translate(-50%, -50%) rotate(45deg);
      transform-origin: center;
    }

    .left-bottom-to-center {
      top: 50%;
      left: 50%;
      width: 200px;
      transform: translate(-50%, -50%) rotate(135deg);
      transform-origin: center;
    }

    .right-top-to-center {
      top: 50%;
      left: 50%;
      width: 200px;
      transform: translate(-50%, -50%) rotate(-45deg);
      transform-origin: center;
    }

    .right-bottom-to-center {
      top: 50%;
      left: 50%;
      width: 200px;
      transform: translate(-50%, -50%) rotate(-135deg);
      transform-origin: center;
    }

    .pipeline-details {
      background: linear-gradient(145deg, #1e293b 0%, #334155 100%);
      border: 1px solid #475569;
      border-radius: 16px;
      padding: 2.5rem;
      max-width: 800px;
      margin: 0 auto;
      backdrop-filter: blur(10px);
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
      transition: all 0.3s ease;
    }

    .pipeline-details:hover {
      border-color: #58a6ff;
      box-shadow: 0 12px 40px rgba(88, 166, 255, 0.2);
    }

    .details-content h3 {
      color: #f1f5f9;
      font-size: 1.6rem;
      font-weight: 600;
      margin-bottom: 1rem;
      text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
    }

    .details-content p {
      color: #94a3b8;
      line-height: 1.7;
      font-size: 1rem;
    }

    @keyframes pulse {
      0%, 100% { opacity: 1; }
      50% { opacity: 0.5; }
    }

    @keyframes ripple {
      0% { transform: scale(1); opacity: 0.3; }
      100% { transform: scale(2); opacity: 0; }
    }

    @keyframes flow {
      0% { 
        left: -15px; 
        opacity: 0; 
      }
      10% { 
        opacity: 1; 
      }
      90% { 
        opacity: 1; 
      }
      100% { 
        left: calc(100% + 15px); 
        opacity: 0; 
      }
    }

    @keyframes shimmer {
      0% { left: -100%; }
      100% { left: 100%; }
    }

    /* Responsive */
    @media (max-width: 1200px) {
      .pipeline-container {
        flex-wrap: wrap;
        gap: 1.5rem;
        justify-content: center;
      }
      
      .pipeline-node {
        width: calc(50% - 0.75rem);
        min-width: 280px;
        max-width: 320px;
      }
      
      .pipeline-connection {
        width: 100%;
        height: 40px;
        transform: rotate(90deg);
      }
      
      .connection-line {
        height: 4px;
      }

    }

    @media (max-width: 768px) {
      .pipeline-demo {
        padding: 3rem 0;
      }
      
      .pipeline-demo h2 {
        font-size: 2rem;
        margin-bottom: 2rem;
      }
      
      .pipeline-container {
        flex-direction: column;
        gap: 2rem;
        padding: 0 0.5rem;
      }
      
      .pipeline-node {
        width: 100%;
        max-width: 350px;
        margin: 0 auto;
        padding: 1.25rem;
      }
      
      .pipeline-connection {
        transform: rotate(90deg);
        width: 6px;
        height: 50px;
      }
      
      .connection-line {
        height: 4px;
      }
      
      .pipeline-details {
        padding: 2rem;
        margin: 0 1rem;
      }
      
      .details-content h3 {
        font-size: 1.4rem;
      }

    }

    @media (max-width: 480px) {
      .pipeline-node {
        padding: 1rem;
      }
      
      .node-content h3 {
        font-size: 1.1rem;
      }
      
      .node-content p {
        font-size: 0.85rem;
      }
      
      .metric {
        font-size: 0.7rem;
        padding: 0.3rem 0.5rem;
      }

    }


    /* Recent Posts */
    .posts-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
      gap: 2rem;
      margin-bottom: 2rem;
    }

    .post-card {
      background: #161b22;
      padding: 2rem;
      border-radius: 1rem;
      box-shadow: 0 4px 6px rgba(0,0,0,0.3);
      border: 1px solid #21262d;
      transition: transform 0.3s, box-shadow 0.3s;
    }

    .post-card:hover {
      transform: translateY(-4px);
      box-shadow: 0 8px 25px rgba(0,0,0,0.4);
      border-color: #58a6ff;
    }

    .post-card h3 {
      font-size: 1.25rem;
      font-weight: 600;
      margin-bottom: 0.5rem;
    }

    .post-card h3 a {
      color: #f0f6fc;
      text-decoration: none;
    }

    .post-card h3 a:hover {
      color: #58a6ff;
    }

    .post-meta {
      color: #8b949e;
      font-size: 0.875rem;
      margin-bottom: 1rem;
    }

    .text-center {
      text-align: center;
    }

    /* Responsive */
    @media (max-width: 768px) {
      .hero h1 {
        font-size: 2.5rem;
      }

      .hero-subtitle {
        font-size: 1.25rem;
      }

      .hero-buttons {
        flex-direction: column;
        align-items: center;
      }

      .timeline::before {
        left: 1rem;
      }

      .timeline-item {
        padding-left: 3rem;
      }

      .timeline-marker {
        left: 0.25rem;
      }

      .posts-grid {
        grid-template-columns: 1fr;
      }
    }
  </style>

  <script is:inline>

    const skillDetails = {
      'python': {
        title: "Python Development",
        description: "Expert in Python for data processing, automation, and ETL pipelines. Built enterprise-grade systems processing millions of records daily. Experience with pandas, pyarrow, Delta tables, and custom data processing workflows."
      },
      'sql': {
        title: "SQL & Database Queries",
        description: "Advanced SQL skills for complex data analysis, optimization, and database design. Experience with PostgreSQL, data warehousing, and performance tuning for large-scale data operations."
      },
      'statistics': {
        title: "Statistical Analysis",
        description: "Strong foundation in statistics and econometrics. Experience with statistical modeling, data interpretation, and advanced analytical techniques for business intelligence and decision-making."
      },
      'data-engineering': {
        title: "Data Engineering",
        description: "Expert in building and maintaining data pipelines, ETL processes, and data infrastructure. Led the development of Warp platform processing millions of records daily across LATAM operations."
      },
      'databases': {
        title: "Database Management",
        description: "Expert in PostgreSQL, data warehousing, and database architecture. Designed scalable database solutions for enterprise applications with focus on performance and reliability."
      },
      'cloud': {
        title: "Cloud Infrastructure",
        description: "Experience with cloud storage solutions and scalable infrastructure design. Built cloud-based data platforms with focus on cost optimization and performance."
      },
      'analytics': {
        title: "Business Analytics",
        description: "Expert in turning raw data into actionable business insights. Experience with advanced analytical techniques, statistical modeling, and data-driven decision making for enterprise clients."
      },
      'visualization': {
        title: "Data Visualization",
        description: "Expert in Power BI dashboard development and data visualization. Built executive-level dashboards for LATAM clients, creating intuitive interfaces for complex data analysis."
      },
      'software-design': {
        title: "Software Design",
        description: "Expert in software architecture, system design, and scalability. Designed and built enterprise-grade data platforms with focus on maintainability, performance, and future-proofing."
      },
      'leadership': {
        title: "Team Leadership",
        description: "Led Datawalt's first Data Engineering Cell. Experience managing technical teams, mentoring developers, and stakeholder communication. Proven track record in building and scaling data teams."
      },
      'communication': {
        title: "Communication",
        description: "Strong communication skills for technical and non-technical audiences. Experience presenting to C-suite executives, mentoring team members, and translating complex concepts into business value."
      },
      'alonso': {
        title: "Data Engineering Lead",
        description: "Experienced data engineering team lead with proven track record in LATAM operations. Successfully built and managed data teams, delivered enterprise-grade data platforms, and demonstrated strong technical leadership in fast-growing environments."
      }
    };


    function showSkillDetails(skillId) {
      console.log('Clicked skill:', skillId);
      
      // Remove active class from all pipeline blocks
      document.querySelectorAll('.pipeline-block').forEach(node => {
        node.classList.remove('active');
      });
      
      // Add active class to clicked pipeline block
      const clickedSkill = document.querySelector(`[data-skill="${skillId}"]`);
      if (clickedSkill) {
        clickedSkill.classList.add('active');
        console.log('Added active class to pipeline block');
      }
      
      // Update skill details
      const details = skillDetails[skillId];
      if (details) {
        const titleElement = document.getElementById('skillTitle');
        const descriptionElement = document.getElementById('skillDescription');
        if (titleElement) {
          titleElement.textContent = details.title;
          console.log('Updated skill title:', details.title);
        }
        if (descriptionElement) {
          descriptionElement.textContent = details.description;
          console.log('Updated skill description');
        }
      }
    }

    // Make function globally available
    window.showSkillDetails = showSkillDetails;

    // Add some random status changes for realism
    setInterval(() => {
      const nodes = document.querySelectorAll('.pipeline-node');
      nodes.forEach(node => {
        if (Math.random() < 0.1) { // 10% chance
          const status = node.querySelector('.node-status');
          if (status) {
            status.style.animation = 'none';
            setTimeout(() => {
              status.style.animation = 'pulse 2s infinite';
            }, 100);
          }
        }
      });
    }, 5000);
  </script>
</Layout>

  </script>
</Layout>
